{"version":3,"sources":["Array-#1/utils/ErrorConstants.js","Array-#1/NewArray.js","Main.js"],"names":["ARRAY_ERROR","NewArray","capacity","arr","Array","size","length","index","val","getCapacity","Error","ARRAY_CAPACOTY_ERROR","INSERT_INDEX_ERROR","i","console","log","insert","GET_ERROR","SET_ERROR","arrInfo","getSize","document","body","innerHTML","Main","add","info","toString","unshift","push","set","get","showContent","content","window","onload"],"mappings":"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","file":"Main.edc4ea10.js","sourceRoot":"..","sourcesContent":["const ARRAY_ERROR = {\n    'ARRAY_CAPACOTY_ERROR': 'ADD_ERROR--Array is full',\n    'INSERT_INDEX_ERROR': 'INSERT_INDEX_ERROR--Array out of bounds',\n    'GET_ERROR': 'GET_ERROR--Array out of bounds',\n    'SET_ERROR': 'SET_ERROR--Array out of bounds',\n};\n\nexport {\n    ARRAY_ERROR,\n};\n","import ARRAY_ERROR from './utils/ErrorConstants';\n/**\n * @author Yuan\n * @description 复写数组\n * @class NewArray\n */\nexport default class NewArray {\n    // 构造默认的数组大小\n    constructor(capacity = 10) {\n        // this.arr = Array.apply(null, Array(capacity)).map(_ => null);\n        this.arr = new Array(capacity);\n        this.size = 0;\n    }\n\n    // 获取当前数组大小\n    getSize() {\n        return this.size;\n    }\n    // 获取数组容量\n    getCapacity() {\n        return this.arr.length;\n    }\n    // 数组判空\n    isEmpty() {\n        return this.size === 0;\n    }\n    // 插入元素\n    insert(index, val) {\n        // 判满\n        if (this.size === this.getCapacity()) {\n            throw new Error(ARRAY_ERROR.ARRAY_CAPACOTY_ERROR);\n        }\n        // index是否符合要求\n        if (index < 0 || index > this.size) {\n            throw new Error(ARRAY_ERROR.INSERT_INDEX_ERROR);\n        }\n\n        for (let i = this.size - 1; i >= index; i--) {\n            this.arr[i + 1] = this.arr[i]\n        }\n\n        this.arr[index] = val\n        this.size++;\n    }\n    // 前方插入\n    unshift(val) {\n        console.log(val)\n        this.insert(0, val);\n    }\n    // 后方插入\n    push(val) {\n        this.insert(this.size, val);\n    }\n    // 添加元素\n    add(val) {\n         // 判满\n         if (this.size === this.getCapacity()) {\n            throw new Error(ARRAY_ERROR.ARRAY_CAPACOTY_ERROR);\n        }\n        this.arr[this.size] = val;\n        this.size++;\n    }\n    // 获取指定位置元素\n    get(index) {\n        if (index < 0 || index > this.size) {\n            throw new Error(ARRAY_ERROR.GET_ERROR);\n        }\n        return this.arr[index];\n    }\n    // set\n    set(index, val) {\n        if (index < 0 || index > this.size) {\n            throw new Error(ARRAY_ERROR.SET_ERROR);\n        }\n        this.arr[index] = val;\n    }\n    // 获取数组信息\n    toString() {\n        let arrInfo = `Array: size-->${this.getSize()}, capacity-->${this.getCapacity()} \\n<br />`;\n        arrInfo += `data = [`\n            for (let i = 0; i < this.size - 1; i++) {\n                arrInfo += `${this.arr[i]},`;\n            }\n        `]`;\n        arrInfo += `${this.arr[this.size - 1]}]`;\n        document.body.innerHTML += `${arrInfo}<br />`\n        return arrInfo;\n    }\n}\n\n// const capacity = 8;\n// const arr = new NewArray(capacity);\n// arr.add(3);\n// arr.add(4);\n// arr.add(5);\n// arr.insert(2, 'sadf');\n\n// console.log(arr.size);\n// console.log(arr.toString());","import NewArray from './Array-#1/NewArray';\n\nclass Main {\n    constructor() {\n        const arr = new NewArray(20);\n        for (let i = 0; i <= 10; i++) {\n            arr.add(i);\n        }\n        console.info('----init----\\n', arr.toString());\n        arr.insert(5, 99999);\n        console.info('----insert----\\n', arr.toString());\n        arr.unshift(-1);\n        console.info('----unshift----\\n', arr.toString());\n        arr.push(88888);\n        console.info('----push----\\n', arr.toString());\n        arr.set(9, 8888);\n        console.log('----get----\\n', arr.get(9));\n        this.showContent(arr.get(9));\n    }\n\n    showContent (content) {\n        document.body.innerHTML += `${content}<br />`\n    }\n}\n\nwindow.onload = function () {\n    new Main();\n}\n"]}